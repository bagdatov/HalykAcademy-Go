Ваша задача - сделать имитацию аэропорта

1) В аэропорту находится 10 самолетов (на парковках)
2) Они должны уметь взлетать и садиться на одну и туже взлётно-посадочную полосу (разумеется без аварий)
3) Самолёты нужно обслуживать, но есть ограничения – одновременно обслуживаться могут только 3 самолета
4) Каждый самолет живет своей жизнью, взлетает - летает и после идет на посадку, обслуживается, ждет какое-то время на паркинге – взлетает.
5) Через какое-то время аэропорт закрывается, нужно дождаться пока все самолеты вернуться обратно, а уже севшим запретить взлет.
    Дополнительного обсужвания они уже не будут требовать - просто паркинг.


Шо есть:
    - У вас есть небольшая заготовка, но львиную часть логики вы должны описать самостоятельно
    - Существует пакет - airport, там есть сущность самолет и аэропорт с взлётно-посадочной полосой


Сущность Airport:
    Аэропорт нужно создать через метод airport.NewAirport().

    Далее вам нужно реализовать потокобезопастноть на этой структуре:
        - посадка и взлет (в один поток). Вход для этих действий – это каналы структуры.
            После идет взаимодействия со вложенной структурой «runway»
        - обслуживание самолетов происходит параллельно, занимает от (2-5 секунд) (в 3 потока)
        - паркинг ничего особенного не требует, кроме как проверка «разрешения на взлет».
        - ВАЖНО у структуры есть поле  - planePool map[string]*Plane.
            Это затычка (map[string]*Plane) - нужно создать/использовать потоко безопасную коллекцию.

Сущность Plane:
    - каждый экземпляр существует сам по себе, пока не сталкивается с точками взаимодействия с Airport
    - Полет самолета делается через contextWithTimeout - timeout это и есть логика полета. Длительность - рандом от (5 - 15 сек)
    - тоже самое касается и "ожидания"
    - если аэропорт закрылся экземпляр больше не пытается взлететь


Остальные моменты:
    - Все действия всех самолетов, должны логироваться.
    - Должны быть комментарии к коду.
    - Других ограничений, кроме тех что описаны выше - нет.
    - код должен запускаться с флагом "go run -race ..." - гонок быть не должно.


Задание со звездочкой*:
    - тепреь в аэропорту несколько взлётно-посадочных полос
    - уменьшенная вместимость аэропорта - 6 (остальные ждут)
    - 2 аэропорта, самолеты летают между ними
    - 12 самолетов, по 6 в каждом аэропорте
    - ** есть приоритетные пасадки самолетов (имитация аварийных случиев)